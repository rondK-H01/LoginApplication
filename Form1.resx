<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bAlNghQgV/6ypzxINtv0rZ9goklL7PemiUDfx4usBaKiYeOYMapFlnVihMrgPe2rwxidzjQxLGNfDUPT
        3BrAWiomHjmDGqRZZ1YoTK4D3tq8MYnc40MSxjXw1D09wawFoqJh45gxqkWWdWKEyuA97avDGJ3ONDEs
        Y18NQ9PcGsBaKiYeOYMapFlnVihMrgPe2rwxidzjQxLGNfDUPT3BrAWiomHjmDGqRZZ1YoTK4D3tq8MY
        nc40MSxjXw1D09wawFoqJh45gxqkWWdWKEyuA9x2PV34xO5xol3g6JVBJCXcNQSRTKBCJkXMUCl+ARvw
        77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw
        77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw
        77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw
        77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxvw77z1LmDxUaxUquqRWo1C
        YmlCF+gU6xxOIF+AfSjVIss6sUJlcCb0T6Np6ZmpqYZ0gquuqZRVUxPxOc47TGjsc0X3Ip/kjsc0X3Ip
        /kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip
        /kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip
        /kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip
        /kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kjsc0X3Ip/kigNZvNVB
        eXodIQkEVlAUVTRDYBjgGzb/AIB//8QAOxEAAQMBBAcEBwYHAAAAAAAAAQIDBAAFBhcxESA0VXOSshI2
        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
        YtA1l1axNPCYmHXQkgLNdR/bf//Z
</value>
  </data>
</root>